openapi: 3.0.1
info:
  title: Api - Sanofi
  description: 'Esta é a api do sistema de almoxarifado da [sanofi](https://www.sanofi.com.br/). Para este exemplo, você pode usar a conta com o login `teste@gmail.com` com a senha `teste`'
  contact:
    email: thide2001@gmail.com
  version: 0.0.1
servers:
- url: https://vps18215.publiccloud.com.br
- url: https://localhost
tags:
- name: Usuário
  description: Usuarios para acesso ao sistema
- name: Autenticacao
  description: Autenticar um usuário
- name: Área
  description: Categoria do produto
- name: Centro de Custos
  description: Centro de custos sob controle de um gestor
- name: Solicitantes
  description: Nome de solicitantes
- name: Importacao
  description: Importe planilhas excel no sistema
paths:
  /area/{id}:
    get:
      tags:
      - Área
      summary: Exibe uma área
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        200:
          description: Área encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Area'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
      security:
      - usuario_autenticado:
        - write
        - read
    put:
      tags:
      - Área
      summary: Edite uma área
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      requestBody:
        description: Edite uma área existente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Area'
        required: true
      responses:
        200:
          description: Edição feita com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Area'
        400:
          description: Provavelmente nome da área já existe
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
      security:
      - usuario_autenticado:
        - write
    delete:
      tags:
      - Área
      summary: Delete uma área
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        200:
          description: Item deletado
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          description: O nome da área provavelmente já está atribuido em outra tabela 
      security:
      - usuario_autenticado:
        - write
        - read
  /area:
    get:
      tags:
      - Área
      summary: Lista todas as Áreas
      responses:
        200:
          description: Listagem feita com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Area'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
      security:
      - usuario_autenticado:
        - write
        - read
    post:
      tags:
      - Área
      summary: Envia uma Área
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Area'
      responses:
        201:
          description: Área criada com sucesso
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Area'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
      security:
      - usuario_autenticado:
        - write
        - read
  /auth/login:
    post:
      tags:
      - Autenticacao
      summary: Autentica um usuário
      responses:
        200:
          description: Usuario autenticado com sucesso
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    token:
                      type: string
                      example: eyJhbGciOilIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibmFtZSI6bnVsbCaiZW1haWwiOiJ0ZXN0ZUBnbWFpbC5jb20iLCJyb0xlIjoiYWRtaW5pc3RyYXRvciIsImV4cGlyYXRpb25Ub2tlbiI6MTYyNTk4NTI0NzM0MiwiaWF0IjoxNjI1OTg1MjQzfQ.OxCW-3p-_WcuP-zwmeRjZslBsMUqmvSJUa9zss9bemk
        401:
          description: Credenciais não correspondem a nenhum usuário
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: teste@gmail.com
                password:
                  type: string
                  example: senha
  /user:
    get:
      tags:
      - Usuário
      summary: Listar os usuários (Apenas para fins de debug)
      responses:
        200:
          description: Listagem feita com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
      security:
      - usuario_autenticado:
        - write
        - read
    post:
      tags:
      - Usuário
      summary: Cadastrar um usuário
      responses:
        201:
          description: Usuario cadastrado com sucesso
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UncryptedUser'
      security:
      - usuario_autenticado:
        - write
        - read

  /costCenter/{code}:
    get:
      tags:
      - Centro de Custos
      summary: Exibe um centro de custo
      parameters:
        - name: code
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        200:
          description: Centro de custo exibido com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCenter'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
      security:
      - usuario_autenticado:
        - write
        - read
    put:
      tags:
      - Centro de Custos
      summary: Edite um centro de custo
      description: O código de um centro de custos não pode ser alterado, portanto não o envie na requisição
      parameters:
        - name: code
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditableCostCenter'
        required: true
        description: Edite um centro de custo existente, envie pelo menos um dos atributos existentes
      responses:
        200:
          description: Edição feita com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Area'
        400:
          description: Provavelmente nome da área já existe
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
      security:
      - usuario_autenticado:
        - write
    delete:
      tags:
      - Centro de Custos
      summary: Deleta um centro de custo
      parameters:
        - name: code
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        200:
          description: Item deletado
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          description: O centro de custos provavelmente já está atribuido em outra tabela e não pode ser deletado
      security:
      - usuario_autenticado:
        - write
        - read
  /costCenter:
    get: 
      tags:
      - Centro de Custos
      summary: Lista todos os centro de custos
      responses:
        200:
          description: Listagem feita com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CostCenter'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
      security:
      - usuario_autenticado:
        - write
        - read
    post:
      tags:
      - Centro de Custos
      summary: Cadastra um centro de custo
      requestBody:
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCenter'
      responses:
        201:
          description: Cadastro feito com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCenter'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
      security:
      - usuario_autenticado:
        - write
        - read

  /requester/{id}:
    get:
      tags:
      - Solicitantes
      summary: Exibe um solicitante
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        200:
          description: Solicitante exibido com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Requester'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
      security:
      - usuario_autenticado:
        - write
        - read
    put:
      tags:
      - Solicitantes
      summary: Edita um solicitante
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Requester'
        required: true
        description: Edite um centro de custo existente, envie pelo menos um dos atributos existentes
      responses:
          200:
            description: Solicitante editado com sucesso
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Requester'
          401:
            $ref: '#/components/responses/Unauthorized'
          403:
            $ref: '#/components/responses/Forbidden'
          404:
            $ref: '#/components/responses/NotFound'
      security:
      - usuario_autenticado:
        - write
        - read
    delete:
      tags:
      - Solicitantes
      summary: Deleta um solicitante
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
          200:
            description: Solicitante deletado com sucesso
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Requester'
          401:
            $ref: '#/components/responses/Unauthorized'
          403:
            $ref: '#/components/responses/Forbidden'
          404:
            $ref: '#/components/responses/NotFound'
      security:
      - usuario_autenticado:
        - write
        - read
            
            
  /import:
    post:
      tags:
      - Importacao
      requestBody:
        content:
          multipart/form-data:
            schema:
              required: 
              - type
              - file
              type: object
              properties:
                type:
                  type: string
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: Planilha importada com sucesso
        400:
          $ref: '#/components/responses/BadRequest'
        401:
            $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
      security:
      - usuario_autenticado:
        - write
        - read
components:
  schemas:
    Role:
      type: string
      enum: ["administrator", "warehouse", "common"]
    
    UncryptedUser:
      type: object
      properties:
        email:
          type: string
          example: teste@gmail.com
        name:
          type: string
          example: Joel
        role:
          $ref: '#/components/schemas/Role'
        password:
          type: string
          example: senha
    User:
      type: object
      properties:
        id:
          type: number
          example: 1
        email:
          type: string
          example: teste@gmail.com
        name:
          type: string
          example: Joel
        passwordHash:
          type: string
          example: 2b$09$PEmiDgMQ/E1pMFmTR2m.JueQGapN2qjC6Xudgio6Z7PKR2yO9M1gW"
        role:
          $ref: '#/components/schemas/Role'
    Area:
      required:
      - name
      - solicitation_is_blocked
      type: object
      properties:
        code:
          type: integer
          format: int64
        name:
          type: string
          example: Embutidos
        solicitation_is_blocked:
          type: boolean
          example: false
    CostCenter:
      type: object
      properties:
        code:
          type: integer
          format: int64
        description:
          type: string
          example: Este é um centro de custos muito massa!
        area:
          type: string
          example: Area
    EditableCostCenter:
      properties:
        description:
          type: string
          example: Este é um centro de custos muito massa!
        area:
          type: string
          example: Area
    Requester:
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Joaquin souza
        area_name:
          type: string
          example: Area
          
  responses:
    BadRequest:
      description: Algum valor enviado no body que foi inesperado
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Algum erro informando porque a requisição não foi um sucesso"
    NotFound:
      description: O id especificado não foi encontrado no banco
    Unauthorized:
      description: Você não está autenticado para acessar este recurso
    Forbidden:
      description: Você não tem permissão suficiente para acessar este recurso
  securitySchemes:
    usuario_autenticado:
      type: http
      scheme: bearer